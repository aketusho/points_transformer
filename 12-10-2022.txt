(1). Modifying the layers in mlp/encoder/transformer does not prevent NAN occurring.

(2). Double check the tensor with batchsize 1. 
# new_feature = torch.cat([group_center, group_polar, group_normal, group_pos], dim=-1)
During the process of generating new_feature(10 channels: x, y, z, polar1, polar2, polar3, norm_x, norm_y, norm_z, pos),
there will be a tensor with all the 0 value in (norm_x, norm_y, norm_z, pos) position.

(3). Double check the process of selecting centers (using FPS) and neighborhoods (using KNN)
It was found that each of the 32 neighborhoods of a point cloud had the same coordiates as the center.(not every point cloud) 
Sometimes we got same neighborhoods coordinates from differnet neighborhoods indexs.
So, all the value will be 0 when we do neighborhoods normalization (neighborhoods-center).So, we cannot calculate the norm vector with [0,0,0].
I can obtain right center position and polar information, but all the norm vactors and pos feature are NAN.

(4). There is no NAN (in loss) in pretraining. There my be a problem with the dataset. (pre: ShapeNet / fine: ScanObjectNN)

(5). The return value of KNN includes center point.(not every point cloud)
I use the x,y,z coordinates in the MAE direcctly (do not need to calculate norm vectors), so original MAE did not report errors.
Therefore, I used KNN algorithm in the Surface instead of the KNN algorithm in the MAE. (The return value contains the center)(not every point cloud).
(All the KNN algorithms in MAE and Surface compiled from C++)
?: The return value of KNN should be the nearest K points near the center point (It should not include the center point itself)
Still got NAN (neighbor position as same as center)
?:Can I delimit the range of "nearest" (more than XXX distance?)

(6). Using the FPS algorithm in the Surface instead of the FPS algorithm in the MAE. (Still got NAN, neighbor position as same as center)

(7). For loop, replacing the neighbor point (which has the same value as center) with the point closest to center (keep the number of neighbors K the same)

(8). There is no NAN in "new_feature" (check NAN)
I can successfully run through the training dataset(small one, 20%).
But after transformer module, still got NAN in validation and test dataset (I used test data instead of val data, still have problems).
It means that there is NAN in the tensor after pos_embedding module.

(9).Back to check.
When I got K neighbors or using other point to replace neighbors, there could be a point that is very little different from the center.
e.g. center [0.111, 0.112, 0.113]     first neighbor [0.111, 0.112, 0.114]   different: 0.001 in z
?: Shoud I replace these neighbor points? (in what range?)These points are not NAN or 0 or infinite.

(10).For NAN
I cannot find the problems when we laod the data. I got NAN in tensor after some operations. I cannot delect some especial(wrong) point cloud data at the begining.

(11). For for loop
In the Surface, I can just cut the center point out of the neighbor points. (need to add:groupping method) (forgot to using sorted index to group umbrella?)

(12). How to confirm the number of K.
Original MAE: K=32  ,input point (batchsize, 2048, 3)
Surface: K=9 (shoud more than/equal to 3)
I tried 32(not sure), 27 and 24.  (128*27=3,456   128*24=3,072     does it have to be greater than 2048?)



